[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ftl-document"
version = "0.1.0"
description = "A tool for generating FTL documents from arbitrary human readable documentation"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["automation", "documentation", "infrastructure", "ftl"]
authors = [
    {name = "FTL Team", email = "team@ftl.dev"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "markdown>=3.4.0",
    "pyyaml>=6.0",
    "litellm>=1.0.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "types-requests>=2.25.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
ftl-document = "ftl_document.cli:main"

[project.urls]
Homepage = "https://github.com/ftl/ftl-document"
Documentation = "https://ftl-document.readthedocs.io"
Repository = "https://github.com/ftl/ftl-document"
"Bug Tracker" = "https://github.com/ftl/ftl-document/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]